# coding=utf-8import web,settingsimport businessfrom db import dburl = ('^/api/category/list','category_list',	   '^/api/category/(\d+)/add','category_add',	   '^/api/category/(\d+)/del','category_del',	   '^/api/category/(\d+)/edit','category_edit',	   	   '^/api/content/add','content_add',	   	   '^/api/fileupload','file_upload',	)#render = web.template.render(settings.TEMPLATE_FOLDER)render = web.template.render(settings.TEMPLATE_FOLDER, base='layout')class List(object):	def GET(self):		return render.list()			def POST(self):		data = web.input()		db.insert("t_product",name=data.name,description=data.desc)		return web.seeother('/api/category/list')	class category_add(object):	def GET(self,parent_id):		return render.category_add(business.genCategoriesTree(),int(parent_id))	def POST(self,parent_id):		data = web.input()		category_id = db.insert("t_category",name=data.name,parent_id=data.parent_id,description=data.description,path='')		#update the 'path' field		path = None		if int(parent_id) == 0 :			path = "$" + str(category_id)		else:			parent_category = db.select('t_category',where="id=" + parent_id)			path = parent_category[0].path + "$" + str(category_id)		db.update('t_category', where="id = " + str(category_id), path = path)		return web.seeother('/api/category/list')class category_del(object):	def GET(self,category_id):		category = db.select('t_category',where="id=" + category_id)[0]		db.delete('t_category',where='path like $path',vars={'path':category.path + "%"})		return web.seeother('/api/category/list')	class category_edit(object):	def GET(self,category_id):		category = db.select('t_category',where="id=" + category_id)[0]		return render.category_edit(business.genCategoriesTree(),category)	def POST(self,category_id):		data = web.input()		db.update('t_category', where="id = " + category_id,name=data.name,description=data.description)		return web.seeother('/api/category/list')	class category_list(object):	def GET(self):		return render.category_list(business.genCategoriesTree())class content_add(object):	def GET(self):		return render.content_add()	class file_upload(object):	def POST(self):		data = web.input(imgFile={})		filedir = settings.UPLOAD_FILE_PATH		if 'imgFile' in data: 			filepath = data.imgFile.filename.replace('\\','/') 			filename=filepath.split('/')[-1] 			fout = open(filedir +'/'+ filename,'wb')#if Unix-Like os,use 'w'			fout.write(data.imgFile.file.read()) 			fout.close()			return '{"error":0,"url":"/static/upload/' + filename + '"}'		else:			return '{"error":1,"message":"请选择上传文件"}'		if __name__ == "__main__":	app = web.application(url,globals())	app.run()		